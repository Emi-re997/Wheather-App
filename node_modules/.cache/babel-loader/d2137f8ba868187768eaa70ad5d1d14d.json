{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Emi\\\\Desktop\\\\FT-M2-master\\\\09-React-Routing\\\\homework\\\\src\\\\containers\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Route } from \"react-router-dom\";\nimport './App.css';\nimport Nav from '../components/Nav.jsx';\nimport Cards from '../components/Cards.jsx';\nimport About from '../components/About.jsx';\nimport Ciudad from \"../components/Ciudad.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = '4ae2636d8dfbdc3044bede63951a019b';\n\nfunction App() {\n  _s();\n\n  const [cities, setCities] = useState([]);\n\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n\n  function onSearch(ciudad) {\n    //Llamado a la API del clima\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}`).then(r => r.json()).then(recurso => {\n      if (recurso.main !== undefined) {\n        const ciudad = {\n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          temp: recurso.main.temp,\n          name: recurso.name,\n          weather: recurso.weather[0].main,\n          clouds: recurso.clouds.all,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon\n        };\n        setCities(oldCities => [...oldCities, ciudad]);\n      } else {\n        alert(\"Ciudad no encontrada\");\n      }\n    });\n  }\n\n  function onFilter(id) {\n    let ciudad = cities.filter(c => c.id === parseInt(id));\n\n    if (ciudad.length > 0) {\n      return ciudad[0];\n    } else {\n      return null;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        render: () => /*#__PURE__*/_jsxDEV(Nav, {\n          onSearch: onSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        render: () => /*#__PURE__*/_jsxDEV(Cards, {\n          cities: cities,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/ciudad/:id\",\n        render: _ref => {\n          let {\n            match\n          } = _ref;\n          cities.find(citi => citi.id === parseInt(match.params.id));\n          console.log(match);\n          return /*#__PURE__*/_jsxDEV(Ciudad, {\n            city: {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        render: () => /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"f1nPJs+hrTaAy6BEqAnKgJLvJt4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Route","Nav","Cards","About","Ciudad","apiKey","App","cities","setCities","onClose","id","oldCities","filter","c","onSearch","ciudad","fetch","then","r","json","recurso","main","undefined","min","Math","round","temp_min","max","temp_max","img","weather","icon","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon","alert","onFilter","parseInt","length","match","find","citi","params","console","log"],"sources":["C:/Users/Emi/Desktop/FT-M2-master/09-React-Routing/homework/src/containers/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Route } from \"react-router-dom\"\nimport './App.css';\nimport Nav from '../components/Nav.jsx';\nimport Cards from '../components/Cards.jsx';\nimport About from '../components/About.jsx';\nimport Ciudad from \"../components/Ciudad.jsx\";\n\nconst apiKey = '4ae2636d8dfbdc3044bede63951a019b';\n\nfunction App() {\n  const [cities, setCities] = useState([]);\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n  function onSearch(ciudad) {\n    //Llamado a la API del clima\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}`)\n      .then(r => r.json())\n      .then((recurso) => {\n        if(recurso.main !== undefined){\n          const ciudad = {\n            min: Math.round(recurso.main.temp_min),\n            max: Math.round(recurso.main.temp_max),\n            img: recurso.weather[0].icon,\n            id: recurso.id,\n            wind: recurso.wind.speed,\n            temp: recurso.main.temp,\n            name: recurso.name,\n            weather: recurso.weather[0].main,\n            clouds: recurso.clouds.all,\n            latitud: recurso.coord.lat,\n            longitud: recurso.coord.lon\n          };\n          setCities(oldCities => [...oldCities, ciudad]);\n        } else {\n          alert(\"Ciudad no encontrada\");\n        }\n      });\n  }\n  function onFilter(id) {\n    let ciudad = cities.filter(c => c.id === parseInt(id));\n    if(ciudad.length > 0) {\n        return ciudad[0];\n    } else {\n        return null;\n    }\n  }\n  return (\n    \n    <div className=\"App\">\n\n\n   \n<div>\n  <Route \n        path=\"/\"\n        render={()=> <Nav onSearch={onSearch}/>}\n        />\n \n  <Route \n        path=\"/\"\n        exact\n        render={()=><Cards cities={cities} onClose={onClose} />}\n        />\n\n  <Route\n        path=\"/ciudad/:id\"\n        render={({match})=>{\n          cities.find((citi)=>citi.id === parseInt(match.params.id))\n          console.log(match)\n          return  <Ciudad \n                        city={{}} \n                /> \n        }}\n  \n  />\n    <Route\n        path=\"/about\"\n        render={()=><About />}\n  />\n\n  \n   \n   \n\n</div>\n  <hr/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}